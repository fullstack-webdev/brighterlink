mixin ie(condition, content)
    | <!--[!{condition}]>!{content}<![endif]-->
// doctype html
html(lang="en", ng-app="blApp.components.auth", xmlns:ng="http://angularjs.org")
    head
        meta(charset="utf-8")
        meta(name="viewport", content="user-scalable=no, width=device-width, initial-scale=1.0, maximum-scale=1, minimum-scale=1")
        title BrighterLink Set Password
        != CDN('/assets/img/favicon.ico')
        //- style sheets
        link(href="//cloud.webtype.com/css/f3ad5809-8f3d-4d94-a57b-31fdc688f3fa.css", rel="stylesheet", type="text/css")
        != CDN('/assets/css/general.min.css')
        != CDN('/assets/css/components.min.css')
    body.ng-cloak(ng-controller="ResetPasswordController", ng-cloak)
        div#wrapper
            div.main-container
                div#page-content-wrapper
                    div.general-login-wrapper
                        div.login-back
                        div.col-lg-12
                            div.header
                                div.row.no-margin
                                    img(src="/assets/img/login-logo.png")
                                div.row.no-margin
                                    img(class="text" src="/assets/img/login-text.png")
                            div.col-xs-12.login-container
                                div.col-sm-6
                                    div.setpwd-content.login-content.col-sm-5.col-sm-offset-4(style="float:left")
                                        div.login-form
                                            div.alert.alert-danger(ng-class="{'show': updatePasswordErrorMessage}", style="display:none;")
                                                p(ng-if="updatePasswordErrorMessage" ng-bind="updatePasswordErrorMessage")
                                            div.alert.alert-success(ng-class="{'show': updatePasswordSucceeded}", style="display:none;")
                                                h5(style="margin: 10px 0 10px;")
                                                    | Password has been updated successfully!
                                                p You will be redirected login page in {{timeCountDown}} seconds.
                                            form(ng-class="{'show': updatePasswordSucceeded}", style="display:none;")
                                                div.form-group
                                                    button(type="button" class="btn btn-auth setpassword" ng-click="backToLogin()") Go back to login
                                            div.loading-overlay(ng-class="{'show': isDoingUpdate }", style="display:none; z-index:999;")
                                            form(name="updatePasswordForm" novalidate="true" ng-submit="updatePassword();" onsubmit="return false;" ng-class="{'hide': updatePasswordSucceeded}")
                                                div.heading.row
                                                    h5 Reset Password
                                                    p Please enter your new password
                                                div.form-group
                                                    label(for="password") Strength
                                                    password-strength-meter(ng-model="update.new", password-strength="update.strength")
                                                    input(type="password" id="inputPwd" name="newpassword" placeholder="New Password" ng-model="update.new" required)
                                                    p.text-danger.text-error(ng-if="updatePasswordForm.submitted && updatePasswordForm.newpassword.$error.required", ng-bind="'Please enter new password.'")
                                                div.form-group
                                                    input(type="password" id="inputConfirmPwd" name="confirmpassword" placeholder="Confirm Password" ng-model="update.confirm" required)
                                                    p.text-danger.text-error(ng-if="updatePasswordForm.submitted && updatePasswordForm.confirmpassword.$error.required", ng-bind="'Please enter confirm password.'")
                                                    p.text-danger.text-error(ng-class="{'show': isPasswordDisMatch }", style="display:none;" ng-bind="'Password and Confirm Password should be same.'")
                                                div.form-group
                                                    button(type="submit" class="btn btn-auth setpassword" name="Submit" ng-disabled="isDoingUpdate"  ng-bind="isDoingUpdate ? 'Updating...' : 'Set New Password'") Set New Password
                            div.copyright.col-xs-12
                                div.col-xs-6.cell.no-padding
                                    p
                                        a(href="#") Tour&nbsp;
                                        span &nbsp;
                                        font |&nbsp;
                                        span &nbsp;
                                        a(href="#") Pricing&nbsp;
                                        span &nbsp;
                                        font |&nbsp;
                                        span &nbsp;
                                        a(href="#") Support&nbsp;
                                        span &nbsp;
                                        font |&nbsp;
                                        span &nbsp;
                                        a(href="#") Developers&nbsp;
                                        span &nbsp;
                                        font |&nbsp;
                                        span &nbsp;
                                        a(href="#") Blog&nbsp;
                                        span &nbsp;
                                        font |&nbsp;
                                        span &nbsp;
                                        a(href="#") Contact&nbsp;
                                        span &nbsp;
                                div.col-xs-6.cell.no-padding
                                    p.reserved BrighterLink &copy; #{(new Date()).getFullYear()}. All rights reserved.&nbsp;
                                    p.privacy_link
                                        span |&nbsp;
                                        a(href="#") Privacy Policy&nbsp;
                                        font |&nbsp;
                                        a(href="#") Terms of Use
    script.
        window.config = "#{(new Buffer(JSON.stringify(config))).toString('base64')}";
        window.token = "#{(new Buffer(token)).toString('base64')}";
    != CDN('/lib/bugreport/bug.report.js')
    != CDN('/lib/jquery/jquery.js')
    != CDN('/lib/jquery/jquery.passstrength.js')
    != CDN('/lib/validate/js/jquery.validate.min.js')
    != CDN('/lib/notyfy/jquery.notyfy.js')
    != CDN('/lib/angular/angular.min.js')
    != CDN('/lib/angular/angular-animate.min.js')
    != CDN('/lib/ng-tags-input/ng-tags-input.js')
    script(src='/components/component.js')
    script(src='/components/services/interceptors.js')
    script(src='/components/services/notify.js')
    script(src='/components/services/toggle.js')
    script(type='text/javascript').
        angular
                .module('blApp.components', ['blApp.components.services'])
                .directive('passwordStrengthMeter', function () {
                    function getPasswordStrength(password) {
                        var score = 0;
                        var regLower = /[a-z]/,
                                regUpper = /[A-Z]/,
                                regNumber = /\d/,
                                regPunctuation = /[.,!@#$%^&*?_~\-?()]/;

                        var hint = '';
                        if (!password) {
                            score = -1;
                            hint = 'Blank Password';
                        } else if (password.length < 3) {
                            score = 0;
                            hint = 'Too short';
                        } else if (password.length < 4) {
                            score = 1;
                            hint = 'Short';
                        } else if (password.length < 6) {
                            score = 2;
                            hint = 'Normal';
                        } else {
                            // length is >= 7 in here
                            if (regLower.test(password) && regUpper.test(password) && regNumber.test(password)) {
                                // if it also has punctuation, then it gets a 5, otherwise just a 4
                                if (regPunctuation.test(password)) {
                                    score = 5;
                                } else {
                                    score = 5;
                                }
                            } else {
                                // if doesn't have upper, lower and numbers, then it gets a 3
                                score = 5;
                            }
                            if (!regLower.test(password)) {
                                score = 3;
                                hint = 'At least 1 lower letter needed';
                            }
                            if (!regUpper.test(password)) {
                                score = 4;
                                hint = 'At least 1 capital letter needed';
                            }
                            if (!regNumber.test(password)) {
                                score = 3;
                                hint = 'At least 1 number needed';
                            }
                            if (!regPunctuation.test(password)) {
                                score = 3;
                                hint = 'At least 1 symbol needed';
                            }
                        }
                        if (score === 5) {
                            score = 5;
                            hint = 'You have perfect password!';
                        }
                        return {
                            strength: score,
                            hint: hint
                        };
                    }

                    function setStrength(strengthInfo, element) {
                        var strengthClasses = ['weak', 'medium', 'strong'],
                                strengthClass = strengthClasses[parseInt(strengthInfo.strength / 2)];

                        element
                                .find('.password-status')
                                .text(strengthInfo.hint)
                                .removeClass(strengthClasses.join(' '))
                                .addClass(strengthClass);

                        element
                                .find('ul li')
                                .removeClass(strengthClasses.join(' '));

                        for (var idx = 1; idx <= strengthInfo.strength + 1.2; idx++) {
                            element.find('#progress' + idx).addClass(strengthClass);
                        }
                    }

                    return {
                        restrict: 'E',
                        template: ['<div class="password-strength-wrapper">',
                            '<p class="password-status" ng-bind="passwordHint"></p>',
                            '<ul id="strength-meter-bar"><li id="progress1"><span class="bar"></span></li>',
                            '<li id="progress2"><span class="bar"></span></li>',
                            '<li id="progress3"><span class="bar"></span></li>',
                            '<li id="progress4"><span class="bar"></span></li>',
                            '<li id="progress5"><span class="bar"></span></li>',
                            '<li id="progress6"><span class="bar"></span></li></ul></div>'].join(''),
                        scope: {
                            ngModel: '='
                        },
                        link: function ($scope, element) {
                            $scope.passwordHint = 'Blank Password';
                            $scope.$watch('ngModel', function (newValue, oldValue) {
                                if (newValue !== oldValue) {
                                    var strengthInfo = getPasswordStrength(newValue);
                                    setStrength(strengthInfo, element);
                                }
                            });
                        }
                    }

                })

                .controller('ResetPasswordController', ['$scope', '$http', function ($scope, $http) {
                    var regLower = /[a-z]/,
                            regUpper = /[A-Z]/,
                            regNumber = /\d/,
                            regPunctuation = /[.,!@#$%^&*?_~\-?()]/;

                    $scope.updatePassword = function () {
                        if ($scope.resetPasswordForm.$invalid) {
                            $scope.resetPasswordForm.submitted = true;
                            return false;
                        }
                        var apiUrl = '/users/login/' + $scope.setpassword.newpassword,
                                requestData = angular.copy($scope.setpassword.newpassword);


                        if ($scope.setpassword.newpassword != $scope.setpassword.confirmpassword) {
                            $scope.isPasswordMatch = true;
                        } else {
                            $scope.isPasswordMatch = false;
                        }
                        if ($scope.setpassword.newpassword.length < 6
                                || !regNumber.test($scope.setpassword.newpassword)
                                || !regLower.test($scope.setpassword.newpassword)
                                || !regPunctuation.test($scope.setpassword.newpassword)
                                || !regUpper.test($scope.setpassword.newpassword)) {
                            return false;
                        }

                        else if ($scope.setpassword.newpassword == $scope.setpassword.confirmpassword) {
                            $scope.isDoingReset = true;
                            $http.post(apiUrl, requestData).
                                    then(function () {
                                        $scope.resetPasswordSucceeded = true;
                                    }, function (errorResp) {
                                        $scope.forgotErrorMessage = errorResp.data.message;
                                        $scope.resetPasswordSucceeded = false;
                                    }).
                                    finally(function () {
                                        $scope.isPasswordMatch = false;
                                        $scope.isPasswordUppercase = false;
                                        $scope.isDoingReset = false;
                                        $scope.resetPasswordSucceeded = true;
                                    });
                        }
                    };

                }]);

    script(src='/components/auth/auth.module.js')
    script(src='/components/auth/reset-password.controller.js')
    script(src='/components/auth/password-strength-meter.directive.js')
